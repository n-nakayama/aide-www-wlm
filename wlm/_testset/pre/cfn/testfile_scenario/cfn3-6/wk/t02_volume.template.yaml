heat_template_version: 2013-05-23

description: >
  WLM(cfn) scenario test CFN-3-6A. small win2012 publicIP admin_pwd sshkey 2VMs Volumn

parameters:
  InstanceType:
    description: Server EC2 instance type
    type: string
    default: m1.small
    constraints:
      - allowed_values:
        - m1.small
        - m1.medium
        - m1.large

  AWSRegionArch2AMI:
    description: FJ nextS5 Region
    type: string
    default: jp-east-1a
    constraints:
      - allowed_values:
        - jp-east-1a
        - jp-east-1b

  InstanceImage:
    description: instance image
    type: string
    default: CentOS-6.6_20141127
    constraints:
      - allowed_values:
        - CentOS-6.6_20141127
        - CentOS-6.6-mini_20141106
        - centos-6.5-64bit-en-global-30g
        - Windows Server 2008 R2 SE 64bit SP1 (Japanese)
        - Windows Server 2008 R2 EE 64bit SP1 (Japanese)
        - Windows Server 2012 R2 SE 64bit (Japanese)
        - windows_server_2012_r2_standard_eval_kvm_20140607
        - w2k12r2se-64bit-jp-jp-80g-2014

  KeyName:
    description: The EC2 Key Pair to allow SSH access to the instances
    type: string

  SSHLocation:
    description: The IP address range that can be used to SSH to the EC2 instances
    type: string
    default: 0.0.0.0/0
    constraints:
      - length: { min: 9, max: 18 }
        description: must be between 9 and 18 characters
      - allowed_pattern: "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})"
        description: must be a valid IP CIDR range of the form x.x.x.x/x.

  private_net_name:
    type: string
    description: Name of private network to be created
    default: soken00-network-private14
    constraints:
      - allowed_values:
        - soken00-network-private11
        - soken00-network-private12
        - soken00-network-private13
        - soken00-network-private14
        - ext-net

  private_net_cidr:
    type: string
    description: Private network address (CIDR notation)
    default: 192.168.14.0/24
    constraints:
      - allowed_values:
        - 192.168.10.0/24
        - 192.168.11.0/24
        - 192.168.12.0/24
        - 192.168.13.0/24
        - 192.168.14.0/24

  #cinder
  volumesize:
    description: BlockStorage Size.
    type: number
    default: 1
    constraints:
      - range: { min: 1, max: 1024 }
        description: must be between 1 and 1024 Gb.


resources:
  #network
  private_net:
    type: OS::Neutron::Net
    properties:
      name: { get_param: private_net_name }

  private_subnet:
    type: OS::Neutron::Subnet
    properties:
      network_id: { get_resource: private_net }
      cidr: { get_param: private_net_cidr }


  # server
  server_1:
    type: OS::Nova::Server
    properties:
      image:  { get_param: InstanceImage }
      flavor: { get_param: InstanceType }
      #key_name: { get_param: KeyName }
      networks:
        - port: { get_resource: server1_port }

  server1_port:
    type: OS::Neutron::Port
    properties:
      network_id: { get_resource: private_net }
      fixed_ips:
        - subnet_id: { get_resource: private_subnet }

  # server
  server_2:
    type: OS::Nova::Server
    properties:
      image:  { get_param: InstanceImage }
      flavor: { get_param: InstanceType }
      #key_name: { get_param: KeyName }
      networks:
        - port: { get_resource: server2_port }

  server2_port:
    type: OS::Neutron::Port
    properties:
      network_id: { get_resource: private_net }
      fixed_ips:
        - subnet_id: { get_resource: private_subnet }


  #storage
  disk01:
    type: OS::Cinder::Volume
    properties:
      #availability_zone: jp-east-1a
      #backup_id: String
      description: String
      #image: String
      #metadata: {...}
      #name: String
      #scheduler_hints: {...}
      size: { get_param: volumesize }
      #snapshot_id: String
      #source_volid: String
      #volume_type: String

  disk01attch:
    type: OS::Cinder::VolumeAttachment
    properties:
      instance_uuid: { get_resource: server_1 }
      #mountpoint: /dev/disk/by-id/virtio-<VolumeId>
      volume_id: { get_resource: disk01 }



outputs:
  server_1_show:
    description: server_1 information.
    value: { get_attr: [server_1, show] }

  server_2_show:
    description: server_2 information.
    value: { get_attr: [server_2, show] }
