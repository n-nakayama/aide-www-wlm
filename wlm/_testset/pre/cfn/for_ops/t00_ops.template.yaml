heat_template_version: 2013-05-23

description: >
  WLM(cfn) scenario test OPS_shared. 2FIPs and keypair.

parameters:
  #key pair for Application Deployment
  key_name:
    description: The EC2 Key Pair to allow SSH access to the instances
    type: string

  # floating ip and router
  public_net_id:
    type: string
    description: >
      ID of public network for which floating IP addresses will be allocated
    default: d2bef1c2-7059-4cd4-b7c7-4fa5180049be
    constraints:
      - allowed_values:
        - soken00-network-floatingip
        #pre
        - d2bef1c2-7059-4cd4-b7c7-4fa5180049be
        #  description: ext-net on PreStage
        #prepre
        - b98913fd-570e-4790-88ed-c441ed1432a6
        #  description: ext-net on PrePreStage
        - c046c789-8956-4beb-8cfa-669969fbca68
        #  description: ext-net2 (on PrePreStage)

resources:
  #key pair
  ec2keypair:
    type: OS::Nova::KeyPair
    properties:
      name: { get_param: key_name }


  # floating ip 1
  floating_ip1:
    type: OS::Neutron::FloatingIP
    properties:
      floating_network_id: { get_param: public_net_id }

  # floating ip 2
  floating_ip2:
    type: OS::Neutron::FloatingIP
    properties:
      floating_network_id: { get_param: public_net_id }


  #network
  private_net:
    type: OS::Neutron::Net
    properties:
      name: soken00-network-private21

  private_subnet:
    type: OS::Neutron::Subnet
    properties:
      network_id: { get_resource: private_net }
      cidr: 192.168.21.0/24


  #connecting ext-net and private_net
  router:
    type: OS::Neutron::Router
    depends_on: private_net
    properties:
      external_gateway_info:
        network: { get_param: public_net_id }

  router_interface:
    type: OS::Neutron::RouterInterface
    depends_on: [ router, private_subnet ]
    properties:
      router_id: { get_resource: router }
      subnet_id: { get_resource: private_subnet }



outputs:
  ec2keypair_info:
    description: keypair information
    value: { get_attr: [ec2keypair, public_key] }

  floating_ip1_info:
    description: floatingIP no.1 information
    value: { get_attr: [floating_ip1, show] }

  floating_ip2_info:
    description: floatingIP no.2 information
    value: { get_attr: [floating_ip2, show] }

  private_subnet_info:
    description: private subnet information
    value: { get_attr: [private_subnet, show] }
