heat_template_version: 2013-05-23

description: >
  A Sample heat orchestration template for the prepre environment.

parameters:
  key_name:
    type: string
    description : Name of a KeyPair to enable SSH access to the instance
    default: testkey
  flavor_name:
    type: string
    description: Instance type for server
    constraints:
      - allowed_values: [m1.small, m1.medium, m1.large]
        description: flavor_name must be one of m1.mini, m1.small, m1.medium or m1.large
    default: m1.small
  image_id:
    type: string
    description: >
      Name or ID of the image to use for the server.
    default: CentOS-6.5-mini+_0904
  volume_size:
    type: number
    description: Size of the volume to be created.
    default: 3
    constraints:
      - range: { min: 2, max: 4 }
        description: must be between 2 and 4 Gb.
  ext_net:
    type: string
    description: >
      ID or name of external network.
    default: c0cb32a0-eb3b-40a2-a827-be4055f00b17
  private_net_name:
    type: string
    description: Name of private network to be created
    default: my_private_net
  private_net_cidr:
    type: string
    description: Private network address (CIDR notation)
    default: 192.168.10.0/24
  private_net_gateway:
    type: string
    description: Private network gateway address
    default: 192.168.10.1
  private_net_pool_start:
    type: string
    description: Start of private network IP address allocation pool
    default: 192.168.10.2
  private_net_pool_end:
    type: string
    description: End of private network IP address allocation pool
    default: 192.168.10.254

resources:
  # server
  server_1:
    type: OS::Nova::Server
    properties:
      image: { get_param: image_id }
      flavor: { get_param: flavor_name }
      key_name: { get_param: key_name }
      networks:
        - uuid: { get_resource: private_net }
  # volume
  volume_1:
    type: OS::Cinder::Volume
    properties:
      size: { get_param: volume_size }
      volume_type: L1
  volume_attachment_1:
    type: OS::Cinder::VolumeAttachment
    properties:
      volume_id: { get_resource: volume_1 }
      instance_uuid: { get_resource: server_1 }
      mountpoint: /dev/vdc
  # network
  private_net:
    type: OS::Neutron::Net
    properties:
      name: { get_param: private_net_name }
  private_subnet:
    type: OS::Neutron::Subnet
    properties:
      network_id: { get_resource: private_net }
      cidr: { get_param: private_net_cidr }
      gateway_ip: { get_param: private_net_gateway }
      allocation_pools:
        - start: { get_param: private_net_pool_start }
          end: { get_param: private_net_pool_end }
  router:
    type: OS::Neutron::Router
#    properties:
#      external_gateway_info:
#        network: { get_param: ext_net }
  router_interface:
    type: OS::Neutron::RouterInterface
    properties:
      router_id: { get_resource: router }
      subnet_id: { get_resource: private_subnet }
  server1_port:
    type: OS::Neutron::Port
    properties:
      network_id: { get_resource: private_net }
      fixed_ips:
        - subnet_id: { get_resource: private_subnet }
      security_groups: [{ get_resource: server_security_group }]
  server_security_group:
    type: OS::Neutron::SecurityGroup
    properties:
      description: Test group to demonstrate Neutron security group functionality with Heat.
      name: test-security-group
      rules: [
        {remote_ip_prefix: 0.0.0.0/0,
        protocol: tcp,
        port_range_min: 22,
        port_range_max: 22},
        {remote_ip_prefix: 0.0.0.0/0,
        protocol: icmp}]

outputs:
  server_1_show:
    description: server_1 information.
    value: { get_attr: [server_1, show] }
